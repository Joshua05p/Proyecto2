/****************************************/
// Encabezado (Libraries)
/*
 * Proyecto2.c
 *
 * Created: 27/04/2025 11:25:38
 * Author : perez
 */

 
#include <avr/io.h>
#include <avr/interrupt.h>
#include <avr/eeprom.h>
#include "Proyecto2.h"

/****************************************/
// Function prototypes

uint16_t valor_servo1 = 0;
uint16_t valor_servo2 = 0;
uint16_t valor_servo3 = 0;
uint16_t valor_servo4 = 0;
uint8_t  canal_actual = 3;
uint8_t  modo		  = 1;
uint16_t EEMEM eeprom_valor1;
uint16_t EEMEM eeprom_valor2;
uint16_t EEMEM eeprom_valor3;
uint16_t EEMEM eeprom_valor4;
/****************************************/
// Main Function

int main(void)
{
       salidas();
	   confi_timer0();
	   confi_timer1();
	   confi_timer2();
	   iniciar_USART(51);
       iniciar_adc();
       iniciar_conversion();
       while (1)
       {
		   if (modo == 1){
			    PORTD |= (1<<PORTD6);
				PORTB &= ~(1<<PORTB3);
				PORTB &= ~(1<<PORTB0);
       }else if (modo == 2){
				PORTD &= ~(1<<PORTD6);
				PORTB |= (1<<PORTB0);
				PORTB &= ~(1<<PORTB3);
	   }else if (modo == 3){
				PORTB &= ~(1<<PORTB0);
				PORTD &= ~(1<<PORTD6);
				PORTB |= (1<<PORTB3);
	   }
}
}
/****************************************/
// NON-Interrupt subroutines

/****************************************/
// Interrupt routines

ISR(ADC_vect)
{ 
	if (modo == 1){
		
       if(canal_actual == 3)
	   {
             ADMUX |= (1<<MUX2);          //cambia al canal 4
             ADMUX &= ~(1<<MUX0);
			 ADMUX &= ~(1<<MUX1);
             canal_actual = 4;
             valor_servo1 = ADC;
             if (valor_servo1 >= 1000)
			 {
                    servo1(16);
             } else if (valor_servo1 <= 50)
			 {
                    servo1(8);
             } else 
			 {
                    servo1(7 + ((valor_servo1 - 51) * 9) / 948);
             }
        }else if (canal_actual == 4)
		{
             ADMUX |= (1<<MUX2) | (1<<MUX0);           //cambia al canal 5
			 ADMUX &= ~(1<<MUX1);
             canal_actual = 5;
             valor_servo2 = ADC;
             if (valor_servo2 >= 1000)
			 {
                    servo2(16);
             } else if (valor_servo2 <= 50)
			 {
                    servo2(8);
             } else 
			 {
                    servo2(7 + ((valor_servo2 - 51) * 9) / 948);
             }

       }else if(canal_actual == 5)
	   {
             ADMUX |= (1<<MUX2) | (1<<MUX1);          //cambia al canal 6
             ADMUX &= ~(1<<MUX0);
             canal_actual = 6;
             valor_servo3 = ADC;
             if (valor_servo3 >= 1000)
			 {
                    servo3(16);
             } else if (valor_servo3 <= 50)
			 {
                    servo3(8);
             } else 
			 {
					servo3(7 + ((valor_servo3 - 51) * 9) / 948);
             }
       }else if(canal_actual == 6)
	   {
             ADMUX |= (1<<MUX0) | (1<<MUX1);          //cambia al canal 3
             ADMUX &= ~(1<<MUX2);
             canal_actual = 3;
             valor_servo4 = ADC;
             if (valor_servo4 >= 1000)
             {
	             servo4(16);
             } else if (valor_servo4 <= 50)
             {
	             servo4(8);
             } else
             {
	             servo4(7 + ((valor_servo4 - 51) * 9) / 948);
             }		   
		   
	   }
}
       iniciar_conversion();

}

ISR(PCINT2_vect) {
	if (!(PIND & (1 << PIND2))) {
		if (modo ==1 ){
		//Funcion para guardar
		
		/*
		eeprom_update_word(&eeprom_valor1, valor_servo1);
		eeprom_update_word(&eeprom_valor2, valor_servo2);
		eeprom_update_word(&eeprom_valor3, valor_servo3);
		eeprom_update_word(&eeprom_valor4, valor_servo4);
		*/
		}
		
		
	}
	if (!(PIND & (1 << PIND4))) {
		modo++;
		if(modo == 4){
			modo = 1;
		}
		
		
		if (modo == 1){
			PORTD |= (1<<PORTD6);
			PORTB &= ~(1<<PORTB3);
			PORTB &= ~(1<<PORTB0);
		}else if (modo == 2){
			/*
			valor_servo1 = eeprom_read_word(&eeprom_valor1);
			valor_servo2 = eeprom_read_word(&eeprom_valor2);
			valor_servo3 = eeprom_read_word(&eeprom_valor3);
			valor_servo4 = eeprom_read_word(&eeprom_valor4);
			*/
		   ///////////////////////////////////
	       if (valor_servo1 >= 1000)
	       {
		       servo1(16);
	       } else if (valor_servo1 <= 50)
	       {
		       servo1(8);
	       } else
	       {
		       servo1(7 + ((valor_servo1 - 51) * 9) / 948);
	       }
		   ///////////////////////////////////
	       if (valor_servo2 >= 1000)
	       {
		       servo2(16);
	       } else if (valor_servo2 <= 50)
	       {
		       servo2(8);
	       } else
	       {
		       servo2(7 + ((valor_servo2 - 51) * 9) / 948);
	       }
		   ///////////////////////////////////
	       if (valor_servo3 >= 1000)
	       {
		       servo3(16);
	       } else if (valor_servo3 <= 50)
	       {
		       servo3(8);
	       } else
	       {
		       servo3(7 + ((valor_servo3 - 51) * 9) / 948);
	       }
		   ///////////////////////////////////
	       if (valor_servo4 >= 1000)
	       {
		       servo4(16);
	       } else if (valor_servo4 <= 50)
	       {
		       servo4(8);
	       } else
	       {
		       servo4(7 + ((valor_servo4 - 51) * 9) / 948);
	       }
	       
			PORTD &= ~(1<<PORTD6);
			PORTB |= (1<<PORTB0);
			PORTB &= ~(1<<PORTB3);
		}else if (modo == 3){
			PORTB &= ~(1<<PORTB0);
			PORTD &= ~(1<<PORTD6);
			PORTB |= (1<<PORTB3);
		}
	}
}

